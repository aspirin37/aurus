parameters:
  - name: k8ns
    type: string

steps:
  - task: Kubernetes@1
    displayName: '${{ parameters.k8ns }} kubectl rollout restart'
    inputs:
      kubernetesServiceEndpoint: 'ya-${{ parameters.k8ns }}'
      namespace: ${{ parameters.k8ns }}
      command: rollout
      arguments: 'restart deployment/$(System.DefinitionName)'

  - task: Kubernetes@1
    displayName: '${{ parameters.k8ns }} kubectl rollout status'
    inputs:
      kubernetesServiceEndpoint: 'ya-${{ parameters.k8ns }}'
      namespace: ${{ parameters.k8ns }}
      command: rollout
      arguments: 'status deployment/$(System.DefinitionName)'

  - task: Kubernetes@1
    displayName: '${{ parameters.k8ns }} kubectl wait for pod'
    inputs:
      kubernetesServiceEndpoint: 'ya-${{ parameters.k8ns }}'
      namespace: ${{ parameters.k8ns }}
      command: wait
      arguments: '--for=condition=ready pod -l app=$(System.DefinitionName) --timeout=120s'

  - task: Bash@3
    displayName: 'Delay 10s'
    inputs:
      targetType: inline
      script: |
        sleep 10

  - task: Kubernetes@1
    displayName: '${{ parameters.k8ns }} kubectl logs'
    inputs:
      kubernetesServiceEndpoint: 'ya-${{ parameters.k8ns }}'
      namespace: ${{ parameters.k8ns }}
      command: logs
      arguments: '-l app=$(System.DefinitionName) --ignore-errors=true --tail 1000'
