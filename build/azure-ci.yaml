stages:
  - stage: Build
    jobs:
      - job: Build
        pool: $(pool)

        workspace:
          clean: all

        timeoutInMinutes: 5

        steps:
        - checkout: self
          persistCredentials: true

          - task: Bash@3
            displayName: 'Debug Env variables'
            inputs:
              targetType: inline
              script: |
                AGENT_NAME_ID=`echo $AGENT_NAME | grep -o "[0-9]" || echo 0 | tail -n 1`
                echo '##vso[task.setvariable variable=AGENT_NAME_ID]'$AGENT_NAME_ID
                env | sort

        - task: Bash@3
          displayName: 'Set git credentials'
          inputs:
            targetType: inline
            script: |
              git config --global --add http.extraheader "AUTHORIZATION: bearer $(System.AccessToken)"

        - template: bump-version.yaml
        - template: azure-pipelines-build.yml
        - template: azure-pipelines-test.yml
        - template: azure-pipelines-deploy.yml

        - task: Bash@3
          displayName: 'Clear git credentials'
          condition: always()
          inputs:
            targetType: inline
            script: |
              git config --global --unset-all http.extraheader

          - task: Bash@3
            displayName: 'Clean-up docker'
            condition: always()
            inputs:
              targetType: inline
              script: |
                docker ps -a | grep -e "\-$BUILD_BUILDID\b" | awk '{ print $1 }' | xargs -r docker stop
                docker ps -a -f status=exited | grep -e "\-$BUILD_BUILDID\b" | awk '{ print $1 }' | xargs -r docker container rm --volumes -f

